// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Docgen from "../src/Docgen.res.mjs";
import * as Buntest from "bun:test";
import * as Nodepath from "node:path";
import * as Core__Result from "@rescript/core/src/Core__Result.res.mjs";

function getCoreModulePath(moduleName) {
  return Nodepath.resolve(__dirname, "../node_modules/@rescript/core/src", moduleName);
}

Buntest.describe("Docgen", (function () {
        Buntest.describe("parseModule", (function () {
                Buntest.test("it should work with RescriptCore modules", (async function () {
                        var result = await Docgen.parseModule(getCoreModulePath("Core__Map.res"));
                        var result$1 = Core__Result.getExn(result);
                        Buntest.expect(result$1.name).toEqual("Core__Map");
                        var differentResult = await Docgen.parseModule(getCoreModulePath("Core__Array.res"));
                        var actualResult = Core__Result.getExn(differentResult);
                        Buntest.expect(actualResult.name).toEqual("Core__Array");
                      }));
                Buntest.test("it handles the case where the module doesn't exist", (async function () {
                        var result = await Docgen.parseModule(getCoreModulePath("DoesNotExist.res"));
                        Buntest.expect(result).toEqual({
                              TAG: "Error",
                              _0: "FileDoesNotExist"
                            });
                      }));
              }));
      }));

export {
  getCoreModulePath ,
}
/*  Not a pure module */
