// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Buntest from "bun:test";
import * as RescriptConfig from "../src/RescriptConfig.res.mjs";

Buntest.describe("RescriptConfig", (function () {
        Buntest.describe("configFromJsonString", (function () {
                Buntest.test("parses simple JSON string", (function () {
                        Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"asdf project\", \"sources\": \"./src\" }")).toEqual({
                              name: "asdf project",
                              sources: [{
                                  dir: "./src",
                                  isDev: false,
                                  subdirs: "NoSubdirs"
                                }],
                              dependencies: [],
                              devDependencies: [],
                              pinnedDependencies: []
                            });
                      }));
                Buntest.describe("dependencies", (function () {
                        Buntest.test("works with dependencies", (function () {
                                var parsed = RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": \"./src\", \"bs-dependencies\": [\"rescript-bun\"] }");
                                Buntest.expect(parsed.dependencies).toEqual(["rescript-bun"]);
                              }));
                        Buntest.test("works with dev deps", (function () {
                                var parsed = RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": \"./src\", \"bs-dev-dependencies\": [\"rescript-bun\"] }");
                                Buntest.expect(parsed.devDependencies).toEqual(["rescript-bun"]);
                              }));
                        Buntest.test("works with pinned deps", (function () {
                                var parsed = RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": \"./src\", \"pinned-dependencies\": [\"rescript-bun\"] }");
                                Buntest.expect(parsed.pinnedDependencies).toEqual(["rescript-bun"]);
                              }));
                        Buntest.test("works with all types of deps at same time", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": \"./src\", \"bs-dependencies\": [\"rescript-bun\"], \"bs-dev-dependencies\": [\"rescript-bun\"], \"pinned-dependencies\": [\"rescript-bun\"] }")).toEqual({
                                      name: "another project",
                                      sources: [{
                                          dir: "./src",
                                          isDev: false,
                                          subdirs: "NoSubdirs"
                                        }],
                                      dependencies: ["rescript-bun"],
                                      devDependencies: ["rescript-bun"],
                                      pinnedDependencies: ["rescript-bun"]
                                    });
                              }));
                      }));
                Buntest.describe("sources", (function () {
                        Buntest.test("works with basic object source", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": [{ \"dir\": \"./src\" }] }").sources).toEqual([{
                                        dir: "./src",
                                        isDev: false,
                                        subdirs: "NoSubdirs"
                                      }]);
                              }));
                        Buntest.test("subdirs defaults to NoSubdirs", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": [{ \"dir\": \"./src\" }] }").sources).toEqual([{
                                        dir: "./src",
                                        isDev: false,
                                        subdirs: "NoSubdirs"
                                      }]);
                              }));
                        Buntest.test("subdirs: true is TraverseAll", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": [{ \"dir\": \"./src\", \"subdirs\": true }] }").sources).toEqual([{
                                        dir: "./src",
                                        isDev: false,
                                        subdirs: "TraverseAll"
                                      }]);
                              }));
                        Buntest.test("works with object source", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": [{ \"dir\": \"./src\", \"type\": \"dev\" }] }").sources).toEqual([{
                                        dir: "./src",
                                        isDev: true,
                                        subdirs: "NoSubdirs"
                                      }]);
                              }));
                        Buntest.test("works with array of string sources", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": [\"./src\", \"./example\"] }").sources).toEqual([
                                      {
                                        dir: "./src",
                                        isDev: false,
                                        subdirs: "NoSubdirs"
                                      },
                                      {
                                        dir: "./example",
                                        isDev: false,
                                        subdirs: "NoSubdirs"
                                      }
                                    ]);
                              }));
                        Buntest.test("works with mixed array of string and object sources", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": [\"./src\", { \"dir\": \"./example\" }] }").sources).toEqual([
                                      {
                                        dir: "./src",
                                        isDev: false,
                                        subdirs: "NoSubdirs"
                                      },
                                      {
                                        dir: "./example",
                                        isDev: false,
                                        subdirs: "NoSubdirs"
                                      }
                                    ]);
                              }));
                        Buntest.test("isDev is set to true if type is dev", (function () {
                                Buntest.expect(RescriptConfig.configFromJsonString("{ \"name\": \"another project\", \"sources\": [{ \"dir\": \"./src\", \"type\": \"dev\" }] }").sources).toEqual([{
                                        dir: "./src",
                                        isDev: true,
                                        subdirs: "NoSubdirs"
                                      }]);
                              }));
                      }));
              }));
      }));

export {
  
}
/*  Not a pure module */
